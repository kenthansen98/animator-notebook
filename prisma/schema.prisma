// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Lesson {
  id Int @default(autoincrement()) @id
  text String?
  lesson Int?
  date DateTime?
  juniorYouth JuniorYouth? @relation(fields: [juniorYouthId], references: [id])
  juniorYouthId Int?
}

model Note {
  id Int @default(autoincrement()) @id
  name String?
  content String?
  juniorYouth JuniorYouth? @relation(fields: [juniorYouthId], references: [id])
  juniorYouthId Int?
  section Section? @relation(fields: [sectionId], references: [id])
  sectionId Int?
}

model Section {
  id Int @default(autoincrement()) @id
  name String?
  notes Note[]
  notebook Notebook? @relation(fields: [notebookId], references: [id])
  notebookId Int?
}

model JuniorYouth {
  id Int @default(autoincrement()) @id
  name String?
  age Int?
  notes Note[]
  lessonsCompleted Lesson[]
  notebook Notebook? @relation(fields: [notebookId], references: [id])
  notebookId Int?
}

model Notebook {
  id Int @default(autoincrement()) @id
  juniorYouth JuniorYouth[]
  sections Section[]
  author User? @relation(fields: [authorId], references: [id])
  authorId Int?
}

model User {
  id            Int @default(autoincrement()) @id
  name          String?
  email         String?   @unique
  emailVerified DateTime? @map(name: "email_verified")
  image         String?
  createdAt     DateTime @default(now()) @map(name: "created_at")
  updatedAt     DateTime @updatedAt @map(name: "updated_at")
  notebooks     Notebook[]
  @@map(name: "users")
}

model Account {
  id                 Int       @default(autoincrement()) @id
  compoundId         String    @unique @map(name: "compound_id")
  userId             Int       @map(name: "user_id")
  providerType       String    @map(name: "provider_type")
  providerId         String    @map(name: "provider_id")
  providerAccountId  String    @map(name: "provider_account_id")
  refreshToken       String?   @map(name: "refresh_token")
  accessToken        String?   @map(name: "access_token")
  accessTokenExpires DateTime? @map(name: "access_token_expires")
  createdAt          DateTime  @default(now()) @map(name: "created_at")
  updatedAt          DateTime  @default(now()) @map(name: "updated_at")

  @@index([providerAccountId], name: "providerAccountId")
  @@index([providerId], name: "providerId")
  @@index([userId], name: "userId")

  @@map(name: "accounts")
}

model Session {
  id           Int      @default(autoincrement()) @id
  userId       Int      @map(name: "user_id")
  expires      DateTime
  sessionToken String   @unique @map(name: "session_token")
  accessToken  String   @unique @map(name: "access_token")
  createdAt    DateTime @default(now()) @map(name: "created_at")
  updatedAt    DateTime @default(now()) @map(name: "updated_at")

  @@map(name: "sessions")
}